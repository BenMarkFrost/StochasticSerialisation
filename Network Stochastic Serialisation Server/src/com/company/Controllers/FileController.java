package com.company.Controllers;

import com.company.Data.CurrentValue;

import java.io.FileWriter;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 * This controller handles writing the current value to a csv file.
 * The csv file can optionally be read by the Python Data Visualisation application.
 *
 */
public class FileController{

    private static DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");

    /**
     * This method handles the logic and formatting behind saving the current value.
     */
    public static void savePoint(){

        CurrentValue cv = CurrentValueController.cv;

        try (
                FileWriter fw = new FileWriter("output.csv", true);
        ){

            fw.append(dtf.format(LocalDateTime.now()));
            fw.append(", ");
            fw.append(String.valueOf(cv.value));
            fw.append("\n");

            System.out.println("Iteration: " + CurrentValueController.iteration);
            System.out.println("Value: " + CurrentValueController.cv.value);

        } catch (Exception e){

            System.err.println("File writing error: " + e.getMessage());

        }

    }

    /**
     * This method clears any output generated by the application in previous executions.
     */
    public static void resetOutput(){

        try (
                FileWriter fw = new FileWriter("output.csv", false);
        ){

        } catch (Exception e){

            System.err.println(e.getMessage());

        }

    }
}
